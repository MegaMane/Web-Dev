

/* Fonts from Google Fonts - more at https://fonts.google.com */
@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700");
@import url("https://fonts.googleapis.com/css?family=Merriweather:400,700");

body {
  background-color: white;
  font-family: "Open Sans", sans-serif;
  padding: 5px 25px;
  font-size: 18px;
  margin: 0;
  color: #444;
}

h1 {
  font-family: "Merriweather", serif;
  font-size: 32px;
}


.avocadoContainer {
    background-color: green;
    padding: 5%;
    margin-bottom: 20px;
    margin-top: 20px;
}

/* #Rectangle is given a relative position so that 
#SpeechBubble (its child) can be positioned correctly. 
Without this step, #SpeechBubble  will be positioned 
relative to the body instead */
#Rectangle {
  margin: auto;
  background-color: #ff5a5a;
  background-image: url('/images/MagicAvocado.gif');
  background-repeat: no-repeat;
  background-size: 600px 600px;
  width: 600px;
  height: 600px;
  position: relative;
}

/* #SpeechBubble is set as a child of #Rectangle to make positioning
it easier. #SpeechBubble is given an absolute position so that its 
position is relative to the #Rectangle (its parent). Its scale is 
set to zero since it should only appear when the mouse hovers over
#Rectangle. The 'animation-fill-mode' property is set to 'forwards' 
so that  the scale value stays at 1 after the animation finishes, 
otherwise  #SpeechBubble will disappear once the animation finishes. 
The 'animation-name' property is omitted since it's going to be 
set by jQuery instead */
#SpeechBubble {
  position: absolute;
  transform-origin: 0% 100%;
  text-align: center;
  background-color: #5a5a5a;
  color: white;
  border-radius: 10px;
  width: 120px;
  padding: 10px;
  left: 460px;
  top: 100px;
  transform: scale(0);
  animation-fill-mode: forwards;
  z-index: 100;
}
/* We need to add a tail to the speech bubble. This is done using
the ::before pseudo-element. The tail's size is controlled by 
its borders. The right and bottom borders are given a transparent
color so that the tail still retains its shape while giving the
desired look */

  #SpeechBubble::before {
    content: "";
    display: block;
    width: 0;
    position: absolute;
    bottom: 0px;
    left: -28px;
    border-style: solid;
    border-width: 20px;
    border-color: #5a5a5a  transparent  transparent #5a5a5a;
    border-radius: 20%;
    transform: rotate(180deg);
    z-index: -1;
  }


  
#WiseCrack {
    position: absolute;
    transform-origin: 0% 100%;
    text-align: center;
    background-color: #5a5a5a;
    color: white;
    border-radius: 10px;
    width: 120px;
    padding: 10px;
    left: -25px;
    top: 225px;
    transform: scale(0);
    animation-fill-mode: forwards;
    z-index: 100;
  }


  #WiseCrack::before {
    content: "";
    display: block;
    width: 0;
    position: absolute;
    bottom: -2px;
    left: 108px;
    border-style: solid;
    border-width: 20px;
    border-color: transparent  transparent #5a5a5a  #5a5a5a;
    border-radius: 20%;
    transform: rotate(10deg);
    z-index: -1;
  }

  button {
      color: green;
      margin-top: 10px;
  }

/* Here the scale changes from 0 to 1. To add the bounciness 
effect, the scale is set to 1.25 midway through the animation
to give the animation a nicer effect. */
@keyframes expand-bounce {
  0% {
    transform: scale(0);
  }
  50% {
    transform: scale(1.25);
  }
  100% {
    transform: scale(1);
  }
}

/* Here the scale simply goes from 1 back to 0 */
@keyframes shrink {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
